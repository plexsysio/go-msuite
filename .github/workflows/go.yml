name: Go

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: [1.16]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Cache Go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Run golangci-lint
      if: matrix.os == 'ubuntu-latest'
      uses: golangci/golangci-lint-action@v2.5.2
    - name: Build
      run: go build -trimpath ./...
    - name: Test
      run: go test -v ./...
    - name: Test with race
      run: go test -v -race -failfast ./...
    - name: DeepSource Coverage
      if: matrix.os == 'ubuntu-latest'
      run: |
        go test -coverprofile=cover.out ./...
        curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key go --value-file ./cover.out
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
    - name: Coveralls
      if: matrix.os == 'ubuntu-latest'
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: cover.out
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
